{"version":3,"sources":["BuyCaluculatorForm.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","formReducer","state","event","id","value","roundAccurately","number","decimalPlaces","Number","Math","round","currToDigit","str","undefined","parseFloat","replace","BuyCaluculatorForm","classes","initialState","occupation","rent","leverage","loan_rate","useReducer","propertyModel","setFormData","handleChange","target","className","noValidate","autoComplete","onSubmit","preventDefault","total_price","property_price","parking_price","buying_tax","notary","total_loan","total_cash","TextField","label","type","onChange","helperText","InputProps","endAdornment","InputAdornment","position","management_cost","property_tax","revenue_tax","currencySymbol","outputFormat","digitGroupSeparator","Button","variant","color","Typography","component","disabled","BasicTable","props","createData","name","year1","year2","year3","year4","loan_repayment","total_price_without_notary","body_corporate","renovation_cost_yearly","gross_income","gross_profit","wealth_tax","net_profit","rows","TableContainer","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","App","Container","maxWidth","Box","my","gutterBottom","Copyright","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"2WAqBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAKPC,EAAc,SAACC,EAAOC,GAC1B,OAAO,2BACFD,GADL,kBAEGC,EAAMC,GAAKD,EAAME,SAItB,SAASC,EAAgBC,EAAQC,GAC/B,OAAOC,OAAOC,KAAKC,MAAMJ,EAAS,IAAMC,GAAiB,KAAOA,GAIlE,SAASI,EAAYC,GACnB,YAAUC,GAAPD,GAIO,GAAPA,EAHM,EAOU,kBAARA,EACFA,EAGU,kBAARA,EACF,EAGFE,WAAWF,EAAIG,QAAQ,IAAM,KAIvB,SAASC,IAAsB,IAAD,EACrCC,EAAUxB,IAIVyB,GAAY,GAChBC,WAAY,KACZC,KAAM,OACNC,SAAU,KACVC,UAAW,KAJK,yBAKN,MALM,gCAMC,QAND,6BAOF,QAPE,2BAQJ,OARI,4BASH,MATG,+BAUA,KAVA,8BAWD,KAXC,4BAYH,GAZG,uBAaR,GAbQ,2BAcJ,GAdI,2BAeJ,GAfI,uCAgBO,KAhBP,GALyB,EAyBNC,qBAAWvB,EAAakB,GAzBlB,mBAyBpCM,EAzBoC,KAyBrBC,EAzBqB,KAsDrCC,EAAe,SAAAxB,GACnBuB,EAAY,CACVtB,GAAID,EAAMyB,OAAOxB,GACjBC,MAAOF,EAAMyB,OAAOvB,SAIxB,OACE,uBAAMwB,UAAWX,EAAQrB,KAAMiC,YAAU,EAACC,aAAa,MAAMC,SAlC1C,SAAA7B,GACnBA,EAAM8B,iBAEN,IAAIC,EAAcxB,KAAKC,OAAOC,EAAYa,EAAcU,gBAAkBvB,EAAYa,EAAcW,iBAAmB,EAAIrB,WAAWU,EAAcY,YAAc,MAC9JC,EAAS5B,KAAKC,OAAOC,EAAYa,EAAcU,gBAAkBvB,EAAYa,EAAcW,iBAAmBrB,WAAWU,EAAcY,YAAc,MACrJE,EAAa7B,KAAKC,MAAMI,WAAWU,EAAcH,UAAY,IAAMY,GACnEM,EAAaN,EAAcK,EAG/Bb,EAAY,CACVtB,GAAI,cACJC,MAAO6B,IAETR,EAAY,CACVtB,GAAI,SACJC,MAAOiC,IAETZ,EAAY,CACVtB,GAAI,aACJC,MAAOmC,IAETd,EAAY,CACVtB,GAAI,aACJC,MAAOkC,KAWT,UAEE,gCACE,cAACE,EAAA,EAAD,CACErC,GAAG,aACHsC,MAAM,uBACNC,KAAK,SACLtC,MAAOoB,EAAcL,WACrBwB,SAAUjB,EACVkB,WAAW,6CACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,kBAGlB,cAACR,EAAA,EAAD,CACErC,GAAG,OACHsC,MAAM,aACNC,KAAK,SACLtC,MAAOoB,EAAcJ,KACrBuB,SAAUjB,EACVkB,WAAW,8DAEb,cAACJ,EAAA,EAAD,CACErC,GAAG,WACHsC,MAAM,uBACNC,KAAK,SACLtC,MAAOoB,EAAcH,SACrBsB,SAAUjB,EACVkB,WAAW,mEACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,kBAGlB,cAACR,EAAA,EAAD,CACErC,GAAG,YACHsC,MAAM,YACNC,KAAK,SACLtC,MAAOoB,EAAcF,UACrBqB,SAAUjB,EACVkB,WAAW,8BACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,kBAGlB,cAACR,EAAA,EAAD,CACErC,GAAG,kBACHsC,MAAM,kBACNC,KAAK,SACLtC,MAAOoB,EAAcyB,gBACrBN,SAAUjB,EACVkB,WAAW,sGACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,qBAIpB,gCACE,cAACR,EAAA,EAAD,CACErC,GAAG,eACHsC,MAAM,oBACNC,KAAK,SACLtC,MAAOoB,EAAc0B,aACrBP,SAAUjB,EACVkB,WAAW,+DACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,kBAGlB,cAACR,EAAA,EAAD,CACErC,GAAG,aACHsC,MAAM,kBACNC,KAAK,SACLtC,MAAOoB,EAAcY,WACrBO,SAAUjB,EACVkB,WAAW,6EACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,kBAGlB,cAACR,EAAA,EAAD,CACErC,GAAG,cACHsC,MAAM,mBACNC,KAAK,SACLtC,MAAOoB,EAAc2B,YACrBR,SAAUjB,EACVkB,WAAW,2BACXC,WAAY,CACVC,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,qBAIpB,gCACE,cAAC,IAAD,CACE7C,GAAG,iBACHsC,MAAM,iBACNW,eAAe,MACfhD,MAAOoB,EAAcU,eACrBmB,aAAa,SACbC,oBAAoB,IACpBX,SAAUjB,EACVnB,cAAe,IAGjB,cAAC,IAAD,CACEJ,GAAG,gBACHsC,MAAM,gBACNW,eAAe,MACfC,aAAa,SACbjD,MAAOoB,EAAcW,cACrBQ,SAAUjB,EACV4B,oBAAoB,IACpB/C,cAAe,OAInB,cAACgD,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNf,KAAK,SAHP,qBAOA,cAACgB,EAAA,EAAD,CAAYC,UAAU,IAAIH,QAAQ,KAAKpD,MAAOoB,EAAcS,YAA5D,oBAGA,cAAC,IAAD,CACEQ,MAAM,cACNW,eAAe,MACfC,aAAa,SACbjD,MAAOoB,EAAca,OACrBM,SAAUjB,EACV4B,oBAAoB,IACpBM,UAAQ,IAEV,cAAC,IAAD,CACEnB,MAAM,cACNW,eAAe,MACfC,aAAa,SACbjD,MAAOoB,EAAcS,YACrBU,SAAUjB,EACV4B,oBAAoB,IACpBM,UAAQ,IAEV,cAAC,IAAD,CACEnB,MAAM,aACNW,eAAe,MACfC,aAAa,SACbjD,MAAOoB,EAAcc,WACrBK,SAAUjB,EACV4B,oBAAoB,IACpBM,UAAQ,IAEV,cAAC,IAAD,CACEnB,MAAM,aACNW,eAAe,MACfC,aAAa,SACbjD,MAAOoB,EAAce,WACrBI,SAAUjB,EACV4B,oBAAoB,IACpBM,UAAQ,IAEV,6BAKQ,KAGR,cAACC,EAAD,CAAYrC,cAAeA,OAKjC,SAASqC,EAAWC,GAClB,IAAM7C,EAAUxB,IAEhB,SAASsE,EAAWC,EAAMC,EAAOC,EAAOC,EAAOC,GAC7C,MAAO,CAAEJ,OAAMC,QAAOC,QAAOC,QAAOC,SAGtC,IAAM5C,EAAiBsC,EAAMtC,cAGzB6C,EAAiB5D,KAAKC,MAAMc,EAAcc,WAAaxB,WAAWU,EAAcF,WAAW,IAAI,GAC/FgD,EAA6B3D,EAAYa,EAAcS,aAAeT,EAAca,OACpFkC,EAAiB9D,KAAKC,MAAO4D,EAA6BxD,WAAWU,EAAcyB,iBAAiB,IAAI,GACxGuB,EAAyBhD,EAAcgD,uBAGvCC,EAAgBhE,KAAKC,MAAqC,GAA/BI,WAAWU,EAAcJ,MAASN,WAAWU,EAAcL,YAAY,IAAI,GAEtGuD,EAAeD,EAAeF,EAAiBF,EAAiBG,EAIhEG,EAA0C,GAA7BL,EAAmCxD,WAAWU,EAAc0B,cAAc,IAEvF0B,EAAaF,GADCA,EAAaC,GAAY7D,WAAWU,EAAc2B,aAAa,IACpCwB,EAEvCE,EAAO,CACXd,EAAW,iBAAkBM,EAAgB,EAAG,EAAG,GACnDN,EAAW,sBAAuBQ,EAAgB,EAAG,EAAG,GACxDR,EAAW,oCAAqCvC,EAAcgD,uBAAwB,EAAG,EAAG,GAC5FT,EAAW,eAAeU,EAAc,EAAG,EAAG,GAC9CV,EAAW,eAAgBW,EAAc,EAAG,EAAG,GAC/CX,EAAW,uBAAwBa,EAAY,EAAG,EAAG,GACrDb,EAAW,uBAAwB1D,EAAgBqE,EAAalD,EAAce,WAAW,IAAI,GAAI,EAAG,EAAG,GACvGwB,EAAW,qBAAsB1D,EAAgBuE,EAAWpD,EAAce,WAAW,IAAI,GAAI,EAAG,EAAG,IAGrG,OACE,cAACuC,EAAA,EAAD,CAAgBnB,UAAWoB,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOpD,UAAWX,EAAQgE,MAAOC,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,yBAGJ,cAACC,EAAA,EAAD,UACGV,EAAKW,KAAI,SAACC,GAAD,OACR,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW1B,UAAU,KAAK+B,MAAM,MAAhC,SACGD,EAAIzB,OAEP,cAACqB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIxB,QAC9B,cAACoB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIvB,QAC9B,cAACmB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAItB,QAC9B,cAACkB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIrB,UAPjBqB,EAAIzB,gBCvVhB,SAAS2B,IACtB,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACrC,EAAA,EAAD,CAAYF,QAAQ,KAAKG,UAAU,KAAKqC,cAAY,EAApD,2DAGA,cAACC,UAAD,OAEF,cAACH,EAAA,EAAD,UACC,cAAC9E,EAAD,S,oBCIQrB,EAjBDuG,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,eAACC,EAAA,EAAD,CAAenH,MAAOA,EAAtB,UAEE,cAACoH,EAAA,EAAD,IACA,cAACpB,EAAD,OAEFqB,SAASC,cAAc,Y","file":"static/js/main.aed5c211.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n// table \nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {\n  Button,\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst formReducer = (state, event) => {\n  return {\n    ...state,\n    [event.id]: event.value\n  }\n}\n\nfunction roundAccurately(number, decimalPlaces) {\n  return Number(Math.round(number + \"e\" + decimalPlaces) + \"e-\" + decimalPlaces);\n} \n\n// transform to str\nfunction currToDigit(str) {\n  if(str == undefined ){\n    return 0;\n  }\n  \n  if(str == 0){\n    return 0;\n  }\n\n  if (typeof str === 'number'){\n    return str;\n  }\n\n  if (typeof str !== 'string'){\n    return 0;\n  }\n\n  return parseFloat(str.replace('\\'', ''))\n}\n\n\nexport default function BuyCaluculatorForm() {\n  const classes = useStyles();\n\n  const isDev = (process.env.NODE_ENV !== \"production\")\n\n  const initialState = {\n    occupation: '95',\n    rent: '1800',\n    leverage: '75',\n    loan_rate: '1',\n    leverage: '75',\n    management_cost: '0.55',\n    property_tax: '0.08',\n    buying_tax: '4.5',\n    revenue_tax: '25',\n    property_price: 600000,\n    parking_price: 20000,\n    total_price: 0, // price paid including notary\n    notary: 0,\n    total_cash: 0,\n    total_loan: 0,\n    renovation_cost_yearly:900\n  };\n\n\n  const [propertyModel, setFormData] = useReducer(formReducer, initialState);\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    var total_price = Math.round((currToDigit(propertyModel.property_price) + currToDigit(propertyModel.parking_price)) * (1 + parseFloat(propertyModel.buying_tax) / 100));\n    var notary = Math.round((currToDigit(propertyModel.property_price) + currToDigit(propertyModel.parking_price)) * (parseFloat(propertyModel.buying_tax) / 100));\n    var total_loan = Math.round(parseFloat(propertyModel.leverage) / 100 * total_price);\n    var total_cash = total_price - total_loan\n\n\n    setFormData({\n      id: 'total_price',\n      value: total_price,\n    });\n    setFormData({\n      id: 'notary',\n      value: notary,\n    });\n    setFormData({\n      id: 'total_cash',\n      value: total_cash,\n    });\n    setFormData({\n      id: 'total_loan',\n      value: total_loan,\n    });\n  }\n  const handleChange = event => {\n    setFormData({\n      id: event.target.id,\n      value: event.target.value,\n    });\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n\n      <div>\n        <TextField\n          id=\"occupation\"\n          label=\"Occupation rate in %\"\n          type=\"number\"\n          value={propertyModel.occupation}\n          onChange={handleChange}\n          helperText=\"95% is about 1 month vacance every 2 years\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"rent\"\n          label=\"Rent price\"\n          type=\"number\"\n          value={propertyModel.rent}\n          onChange={handleChange}\n          helperText=\"Rent excluding utilities bills such as heater/electricity\"\n        />\n        <TextField\n          id=\"leverage\"\n          label=\"Leverage of the loan\"\n          type=\"number\"\n          value={propertyModel.leverage}\n          onChange={handleChange}\n          helperText=\"Percentage of loan compared to total price including notary fees\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"loan_rate\"\n          label=\"Loan Rate\"\n          type=\"number\"\n          value={propertyModel.loan_rate}\n          onChange={handleChange}\n          helperText=\"Percentage of the loan rate\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"management_cost\"\n          label=\"Management Cost\"\n          type=\"number\"\n          value={propertyModel.management_cost}\n          onChange={handleChange}\n          helperText=\"Typically around 0.6% of value, that includes everything except internal renovation and electricity\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"property_tax\"\n          label=\"Property tax in %\"\n          type=\"number\"\n          value={propertyModel.property_tax}\n          onChange={handleChange}\n          helperText=\"In French called the Impot Foncier, depending on the commune\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"buying_tax\"\n          label=\"Buying tax in %\"\n          type=\"number\"\n          value={propertyModel.buying_tax}\n          onChange={handleChange}\n          helperText=\"Depends on the canton, for VD typically 4.5 including state tax and notary\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"revenue_tax\"\n          label=\"Revenue tax in %\"\n          type=\"number\"\n          value={propertyModel.revenue_tax}\n          onChange={handleChange}\n          helperText=\"Your revenue tax bracket\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n          }}\n        />\n      </div>\n      <div>\n        <CurrencyTextField\n          id=\"property_price\"\n          label=\"Property price\"\n          currencySymbol=\"CHF\"\n          value={propertyModel.property_price}\n          outputFormat=\"number\"\n          digitGroupSeparator=\"'\"\n          onChange={handleChange}\n          decimalPlaces={0}\n\n        />\n        <CurrencyTextField\n          id=\"parking_price\"\n          label=\"Parking price\"\n          currencySymbol=\"CHF\"\n          outputFormat=\"number\"\n          value={propertyModel.parking_price}\n          onChange={handleChange}\n          digitGroupSeparator=\"'\"\n          decimalPlaces={0}\n        />\n\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n      >\n        Compute\n      </Button>\n      <Typography component=\"p\" variant=\"h4\" value={propertyModel.total_price}>\n        Result\n      </Typography>\n      <CurrencyTextField\n        label=\"Notary fees\"\n        currencySymbol=\"CHF\"\n        outputFormat=\"number\"\n        value={propertyModel.notary}\n        onChange={handleChange}\n        digitGroupSeparator=\"'\"\n        disabled\n      />\n      <CurrencyTextField\n        label=\"Total price\"\n        currencySymbol=\"CHF\"\n        outputFormat=\"number\"\n        value={propertyModel.total_price}\n        onChange={handleChange}\n        digitGroupSeparator=\"'\"\n        disabled\n      />\n      <CurrencyTextField\n        label=\"Total loan\"\n        currencySymbol=\"CHF\"\n        outputFormat=\"number\"\n        value={propertyModel.total_loan}\n        onChange={handleChange}\n        digitGroupSeparator=\"'\"\n        disabled\n      />\n      <CurrencyTextField\n        label=\"Total cash\"\n        currencySymbol=\"CHF\"\n        outputFormat=\"number\"\n        value={propertyModel.total_cash}\n        onChange={handleChange}\n        digitGroupSeparator=\"'\"\n        disabled\n      />\n      <ul>\n        {isDev ? (\n            Object.entries(propertyModel).map(([id, value]) => (\n            <li key={id}><strong>{id}</strong>:{value}</li>\n          ))\n        )  : (\"\")\n        }\n      </ul>\n      <BasicTable propertyModel={propertyModel}/>\n    </form>\n  );\n}\n\nfunction BasicTable(props) {\n  const classes = useStyles();\n\n  function createData(name, year1, year2, year3, year4) {\n    return { name, year1, year2, year3, year4 };\n  }\n\n  const propertyModel  = props.propertyModel;\n\n  // running cost\n  var loan_repayment = Math.round(propertyModel.total_loan * parseFloat(propertyModel.loan_rate)/100,2);\n  var total_price_without_notary = currToDigit(propertyModel.total_price) - propertyModel.notary ;\n  var body_corporate = Math.round( total_price_without_notary  *parseFloat(propertyModel.management_cost)/100,2);\n  var renovation_cost_yearly = propertyModel.renovation_cost_yearly;\n \n  // income\n  var gross_income =  Math.round(parseFloat(propertyModel.rent)*12*parseFloat(propertyModel.occupation)/100,2);\n\n  var gross_profit = gross_income - body_corporate - loan_repayment - renovation_cost_yearly;\n  \n  // tax income/wealth\n  \n  var wealth_tax = total_price_without_notary * 0.8 * parseFloat(propertyModel.property_tax)/100;\n  var income_tax = (gross_profit-wealth_tax)*parseFloat(propertyModel.revenue_tax)/100;  \n  var net_profit = gross_profit - income_tax - wealth_tax;\n\n  const rows = [\n    createData('Loan Repayment', loan_repayment, 0, 0, 0),\n    createData('Body corporate fees', body_corporate, 0, 0, 0),\n    createData('Internal renovation yearly saving', propertyModel.renovation_cost_yearly, 0, 0, 0),\n    createData('Gross income',gross_income, 0, 0, 0),\n    createData('Gross profit', gross_profit, 0, 0, 0),\n    createData('Net profit after tax', net_profit, 0, 0, 0),\n    createData('Gross profit on cash', roundAccurately(gross_profit/propertyModel.total_cash*100,2), 0, 0, 0),\n    createData('Net profit on cash', roundAccurately(net_profit/propertyModel.total_cash*100,2), 0, 0, 0),\n  ];\n  \n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Label</TableCell>\n            <TableCell align=\"right\">Year 1</TableCell>\n            <TableCell align=\"right\">Year 2</TableCell>\n            <TableCell align=\"right\">Year 3</TableCell>\n            <TableCell align=\"right\">Year 4</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.year1}</TableCell>\n              <TableCell align=\"right\">{row.year2}</TableCell>\n              <TableCell align=\"right\">{row.year3}</TableCell>\n              <TableCell align=\"right\">{row.year4}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BuyCaluculatorForm from './BuyCaluculatorForm';\n\n\nexport default function App() {\n  return (\n    <Container maxWidth=\"xl\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Swiss Online Realestate Investment Calculator\n        </Typography>\n        <Copyright />\n      </Box>\n      <Box>\n       <BuyCaluculatorForm />\n    </Box>\n    </Container>\n    \n   \n  );\n}\n\n\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}